{"title":"docker-maven插件问题","slug":"Other/docker-maven","date":"2021-12-04T11:56:47.000Z","updated":"2023-11-29T02:42:01.745Z","comments":true,"path":"api/articles/Other/docker-maven.json","realPath":null,"excerpt":null,"covers":null,"cover":"/images/background/docker-maven.jpg","content":"<p>个人在使用docker-maven-plugin来构建镜像的时候出现报错消息</p>\n<p>报错 Connection reset by peer ，具体错误日志如下所示：</p>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs log\">[ERROR] Failed to execute goal com.spotify:docker-maven-plugin:1.2.2:build (default-cli)<br>on project parkinglot: Exception caught: java.util.concurrent.ExecutionException: <br>com.spotify.docker.client.shaded.javax.ws.rs.ProcessingException:<br>com.spotify.docker.client.shaded.org.apache.http.client.ClientProtocolException: <br>Cannot retry request with a non-repeatable request entity: Connection reset by peer -&gt; [Help 1]<br></code></pre></td></tr></tbody></table></figure>\n\n<figure class=\"highlight xml\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">plugin</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>com.spotify<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>docker-maven-plugin<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>1.2.2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependencies</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>javax.activation<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>activation<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>1.1.1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependencies</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">configuration</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">imageName</span>&gt;</span>oldBookShare<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">imageName</span>&gt;</span><br>        <span class=\"hljs-comment\">&lt;!-- 指定 Dockerfile 所在的文件目录 --&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dockerDirectory</span>&gt;</span>${project.basedir}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dockerDirectory</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">resources</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">resource</span>&gt;</span><br>                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">targetPath</span>&gt;</span>/<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">targetPath</span>&gt;</span><br>                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">directory</span>&gt;</span>${project.build.directory}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">directory</span>&gt;</span><br>                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">include</span>&gt;</span>${project.build.finalName}.jar<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">include</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">resource</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">resources</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">configuration</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">plugin</span>&gt;</span><br></code></pre></td></tr></tbody></table></figure>\n\n<p>解决方法：将图中的oldBookShare改成old-book-share就好了，容器名称不能有大写。</p>\n<p>报错 Permission denied ，具体错误日志如下所示：</p>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs log\">[ERROR] Failed to execute goal com.spotify:docker-maven-plugin:1.2.2:build (default-cli)<br>on project tomcat-container: Exception caught: java.util.concurrent.ExecutionException: <br>com.spotify.docker.client.shaded.javax.ws.rs.ProcessingException: java.io.IOException:<br>Permission denied -&gt; [Help 1]<br></code></pre></td></tr></tbody></table></figure>\n\n<p>遇到了权限不足的情况习惯性的切换到root用户执行，结果一直被阻塞，疯狂打印日志（我所用操作系统：VM-20-7-debian）。<br><a href=\"https://www.cnblogs.com/goWithHappy/p/solve-docker-maven-permission-deny.html\">经过苦苦探寻，最终找到了解决该问题的方法。</a></p>\n<p>/var/run/docker.sock文件,它是默认情况下docker守护程序侦听的UNIX套接字侦听，它可用于与容器内与守护程序通信。 普通用户是没有权限的，先查看docker.sock的文件权限</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo <span class=\"hljs-built_in\">ls</span> -al /var/run/docker.sock<br></code></pre></td></tr></tbody></table></figure>\n<p>执行结果如下：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">srw-rw---- 1 root docker 0 Dec  1 20:42 /var/run/docker.sock<br></code></pre></td></tr></tbody></table></figure>\n\n<p>发现普通用户果然没有权限操作该文件的，因此考虑修改文件权限，执行如下命令：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo <span class=\"hljs-built_in\">chmod</span> 666 /var/run/docker.sock<br></code></pre></td></tr></tbody></table></figure>\n\n<p>然后我们重新执行docker的命令发现可以出现正常的结果，服务器重启的时候docker.sock文件可能会恢复，遇到这个问题再修改一下权限就可以了。</p>\n","more":"<p>个人在使用docker-maven-plugin来构建镜像的时候出现报错消息</p>\n<p>报错 Connection reset by peer ，具体错误日志如下所示：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs log\">[ERROR] Failed to execute goal com.spotify:docker-maven-plugin:1.2.2:build (default-cli)<br>on project parkinglot: Exception caught: java.util.concurrent.ExecutionException: <br>com.spotify.docker.client.shaded.javax.ws.rs.ProcessingException:<br>com.spotify.docker.client.shaded.org.apache.http.client.ClientProtocolException: <br>Cannot retry request with a non-repeatable request entity: Connection reset by peer -&gt; [Help 1]<br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">plugin</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>com.spotify<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>docker-maven-plugin<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>1.2.2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependencies</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>javax.activation<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>activation<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>1.1.1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependencies</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">configuration</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">imageName</span>&gt;</span>oldBookShare<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">imageName</span>&gt;</span><br>        <span class=\"hljs-comment\">&lt;!-- 指定 Dockerfile 所在的文件目录 --&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dockerDirectory</span>&gt;</span>$&#123;project.basedir&#125;<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dockerDirectory</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">resources</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">resource</span>&gt;</span><br>                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">targetPath</span>&gt;</span>/<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">targetPath</span>&gt;</span><br>                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">directory</span>&gt;</span>$&#123;project.build.directory&#125;<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">directory</span>&gt;</span><br>                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">include</span>&gt;</span>$&#123;project.build.finalName&#125;.jar<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">include</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">resource</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">resources</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">configuration</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">plugin</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<p>解决方法：将图中的oldBookShare改成old-book-share就好了，容器名称不能有大写。</p>\n<p>报错 Permission denied ，具体错误日志如下所示：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs log\">[ERROR] Failed to execute goal com.spotify:docker-maven-plugin:1.2.2:build (default-cli)<br>on project tomcat-container: Exception caught: java.util.concurrent.ExecutionException: <br>com.spotify.docker.client.shaded.javax.ws.rs.ProcessingException: java.io.IOException:<br>Permission denied -&gt; [Help 1]<br></code></pre></td></tr></table></figure>\n\n<p>遇到了权限不足的情况习惯性的切换到root用户执行，结果一直被阻塞，疯狂打印日志（我所用操作系统：VM-20-7-debian）。<br><a href=\"https://www.cnblogs.com/goWithHappy/p/solve-docker-maven-permission-deny.html\">经过苦苦探寻，最终找到了解决该问题的方法。</a></p>\n<p>&#x2F;var&#x2F;run&#x2F;docker.sock文件,它是默认情况下docker守护程序侦听的UNIX套接字侦听，它可用于与容器内与守护程序通信。 普通用户是没有权限的，先查看docker.sock的文件权限</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo <span class=\"hljs-built_in\">ls</span> -al /var/run/docker.sock<br></code></pre></td></tr></table></figure>\n<p>执行结果如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">srw-rw---- 1 root docker 0 Dec  1 20:42 /var/run/docker.sock<br></code></pre></td></tr></table></figure>\n\n<p>发现普通用户果然没有权限操作该文件的，因此考虑修改文件权限，执行如下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo <span class=\"hljs-built_in\">chmod</span> 666 /var/run/docker.sock<br></code></pre></td></tr></table></figure>\n\n<p>然后我们重新执行docker的命令发现可以出现正常的结果，服务器重启的时候docker.sock文件可能会恢复，遇到这个问题再修改一下权限就可以了。</p>\n","categories":[{"name":"踩坑","path":"api/categories/踩坑.json"}],"tags":[{"name":"java","path":"api/tags/java.json"},{"name":"maven","path":"api/tags/maven.json"},{"name":"插件","path":"api/tags/插件.json"}]}